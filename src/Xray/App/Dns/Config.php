<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: app/dns/config.proto

namespace Xray\App\Dns;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;
use Google\Protobuf\Internal\RepeatedField;
use Xray\App\Dns\Config\HostMapping;

/**
 * Generated from protobuf message <code>xray.app.dns.Config</code>
 */
class Config extends Message
{
    /**
     * NameServer list used by this DNS client.
     * A special value 'localhost' as a domain address can be set to use DNS on local system.
     *
     * Generated from protobuf field <code>repeated .xray.app.dns.NameServer name_server = 5;</code>
     */
    private $name_server;
    /**
     * Client IP for EDNS client subnet. Must be 4 bytes (IPv4) or 16 bytes
     * (IPv6).
     *
     * Generated from protobuf field <code>bytes client_ip = 3;</code>
     */
    protected $client_ip = '';
    /**
     * Generated from protobuf field <code>repeated .xray.app.dns.Config.HostMapping static_hosts = 4;</code>
     */
    private $static_hosts;
    /**
     * Tag is the inbound tag of DNS client.
     *
     * Generated from protobuf field <code>string tag = 6;</code>
     */
    protected $tag = '';
    /**
     * DisableCache disables DNS cache
     *
     * Generated from protobuf field <code>bool disableCache = 8;</code>
     */
    protected $disableCache = false;
    /**
     * Generated from protobuf field <code>.xray.app.dns.QueryStrategy query_strategy = 9;</code>
     */
    protected $query_strategy = 0;
    /**
     * Generated from protobuf field <code>bool disableFallback = 10;</code>
     */
    protected $disableFallback = false;
    /**
     * Generated from protobuf field <code>bool disableFallbackIfMatch = 11;</code>
     */
    protected $disableFallbackIfMatch = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     * @type array<NameServer>|RepeatedField $name_server
     *           NameServer list used by this DNS client.
     *           A special value 'localhost' as a domain address can be set to use DNS on local system.
     * @type string $client_ip
     *           Client IP for EDNS client subnet. Must be 4 bytes (IPv4) or 16 bytes
     *           (IPv6).
     * @type array<HostMapping>|RepeatedField $static_hosts
     * @type string $tag
     *           Tag is the inbound tag of DNS client.
     * @type bool $disableCache
     *           DisableCache disables DNS cache
     * @type int $query_strategy
     * @type bool $disableFallback
     * @type bool $disableFallbackIfMatch
     * }
     */
    public function __construct($data = NULL)
    {
        \GPBMetadata\App\Dns\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * NameServer list used by this DNS client.
     * A special value 'localhost' as a domain address can be set to use DNS on local system.
     *
     * Generated from protobuf field <code>repeated .xray.app.dns.NameServer name_server = 5;</code>
     * @return RepeatedField
     */
    public function getNameServer()
    {
        return $this->name_server;
    }

    /**
     * NameServer list used by this DNS client.
     * A special value 'localhost' as a domain address can be set to use DNS on local system.
     *
     * Generated from protobuf field <code>repeated .xray.app.dns.NameServer name_server = 5;</code>
     * @param array<NameServer>|RepeatedField $var
     * @return $this
     */
    public function setNameServer($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, NameServer::class);
        $this->name_server = $arr;

        return $this;
    }

    /**
     * Client IP for EDNS client subnet. Must be 4 bytes (IPv4) or 16 bytes
     * (IPv6).
     *
     * Generated from protobuf field <code>bytes client_ip = 3;</code>
     * @return string
     */
    public function getClientIp()
    {
        return $this->client_ip;
    }

    /**
     * Client IP for EDNS client subnet. Must be 4 bytes (IPv4) or 16 bytes
     * (IPv6).
     *
     * Generated from protobuf field <code>bytes client_ip = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setClientIp($var)
    {
        GPBUtil::checkString($var, False);
        $this->client_ip = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .xray.app.dns.Config.HostMapping static_hosts = 4;</code>
     * @return RepeatedField
     */
    public function getStaticHosts()
    {
        return $this->static_hosts;
    }

    /**
     * Generated from protobuf field <code>repeated .xray.app.dns.Config.HostMapping static_hosts = 4;</code>
     * @param array<HostMapping>|RepeatedField $var
     * @return $this
     */
    public function setStaticHosts($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, HostMapping::class);
        $this->static_hosts = $arr;

        return $this;
    }

    /**
     * Tag is the inbound tag of DNS client.
     *
     * Generated from protobuf field <code>string tag = 6;</code>
     * @return string
     */
    public function getTag()
    {
        return $this->tag;
    }

    /**
     * Tag is the inbound tag of DNS client.
     *
     * Generated from protobuf field <code>string tag = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setTag($var)
    {
        GPBUtil::checkString($var, True);
        $this->tag = $var;

        return $this;
    }

    /**
     * DisableCache disables DNS cache
     *
     * Generated from protobuf field <code>bool disableCache = 8;</code>
     * @return bool
     */
    public function getDisableCache()
    {
        return $this->disableCache;
    }

    /**
     * DisableCache disables DNS cache
     *
     * Generated from protobuf field <code>bool disableCache = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setDisableCache($var)
    {
        GPBUtil::checkBool($var);
        $this->disableCache = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.xray.app.dns.QueryStrategy query_strategy = 9;</code>
     * @return int
     */
    public function getQueryStrategy()
    {
        return $this->query_strategy;
    }

    /**
     * Generated from protobuf field <code>.xray.app.dns.QueryStrategy query_strategy = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setQueryStrategy($var)
    {
        GPBUtil::checkEnum($var, QueryStrategy::class);
        $this->query_strategy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool disableFallback = 10;</code>
     * @return bool
     */
    public function getDisableFallback()
    {
        return $this->disableFallback;
    }

    /**
     * Generated from protobuf field <code>bool disableFallback = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setDisableFallback($var)
    {
        GPBUtil::checkBool($var);
        $this->disableFallback = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool disableFallbackIfMatch = 11;</code>
     * @return bool
     */
    public function getDisableFallbackIfMatch()
    {
        return $this->disableFallbackIfMatch;
    }

    /**
     * Generated from protobuf field <code>bool disableFallbackIfMatch = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setDisableFallbackIfMatch($var)
    {
        GPBUtil::checkBool($var);
        $this->disableFallbackIfMatch = $var;

        return $this;
    }

}

