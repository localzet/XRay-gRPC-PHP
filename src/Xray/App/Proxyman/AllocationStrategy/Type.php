<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: app/proxyman/config.proto

namespace Xray\App\Proxyman\AllocationStrategy;

use UnexpectedValueException;

/**
 * Protobuf type <code>xray.app.proxyman.AllocationStrategy.Type</code>
 */
class Type
{
    /**
     * Always allocate all connection handlers.
     *
     * Generated from protobuf enum <code>Always = 0;</code>
     */
    const Always = 0;
    /**
     * Randomly allocate specific range of handlers.
     *
     * Generated from protobuf enum <code>Random = 1;</code>
     */
    const Random = 1;
    /**
     * External. Not supported yet.
     *
     * Generated from protobuf enum <code>External = 2;</code>
     */
    const External = 2;

    private static $valueToName = [
        self::Always => 'Always',
        self::Random => 'Random',
        self::External => 'External',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Xray\App\Proxyman\AllocationStrategy_Type::class);

