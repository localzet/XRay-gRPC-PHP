<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: app/observatory/config.proto

namespace Xray\Core\App\Observatory;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;
use Google\Protobuf\Internal\RepeatedField;

/**
 * Generated from protobuf message <code>xray.core.app.observatory.Config</code>
 */
class Config extends Message
{
    /**
     * &#64;Document The selectors for outbound under observation
     *
     * Generated from protobuf field <code>repeated string subject_selector = 2;</code>
     */
    private $subject_selector;
    /**
     * Generated from protobuf field <code>string probe_url = 3;</code>
     */
    protected $probe_url = '';
    /**
     * Generated from protobuf field <code>int64 probe_interval = 4;</code>
     */
    protected $probe_interval = 0;
    /**
     * Generated from protobuf field <code>bool enable_concurrency = 5;</code>
     */
    protected $enable_concurrency = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     * @type array<string>|RepeatedField $subject_selector
     *           &#64;Document The selectors for outbound under observation
     * @type string $probe_url
     * @type int|string $probe_interval
     * @type bool $enable_concurrency
     * }
     */
    public function __construct($data = NULL)
    {
        \GPBMetadata\App\Observatory\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * &#64;Document The selectors for outbound under observation
     *
     * Generated from protobuf field <code>repeated string subject_selector = 2;</code>
     * @return RepeatedField
     */
    public function getSubjectSelector()
    {
        return $this->subject_selector;
    }

    /**
     * &#64;Document The selectors for outbound under observation
     *
     * Generated from protobuf field <code>repeated string subject_selector = 2;</code>
     * @param array<string>|RepeatedField $var
     * @return $this
     */
    public function setSubjectSelector($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::STRING);
        $this->subject_selector = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string probe_url = 3;</code>
     * @return string
     */
    public function getProbeUrl()
    {
        return $this->probe_url;
    }

    /**
     * Generated from protobuf field <code>string probe_url = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setProbeUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->probe_url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 probe_interval = 4;</code>
     * @return int|string
     */
    public function getProbeInterval()
    {
        return $this->probe_interval;
    }

    /**
     * Generated from protobuf field <code>int64 probe_interval = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProbeInterval($var)
    {
        GPBUtil::checkInt64($var);
        $this->probe_interval = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool enable_concurrency = 5;</code>
     * @return bool
     */
    public function getEnableConcurrency()
    {
        return $this->enable_concurrency;
    }

    /**
     * Generated from protobuf field <code>bool enable_concurrency = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableConcurrency($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_concurrency = $var;

        return $this;
    }

}

