<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core/config.proto

namespace Xray\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;
use Google\Protobuf\Internal\RepeatedField;
use Xray\Common\Serial\TypedMessage;

/**
 * Config is the master config of Xray. Xray takes this config as input and
 * functions accordingly.
 *
 * Generated from protobuf message <code>xray.core.Config</code>
 */
class Config extends Message
{
    /**
     * Inbound handler configurations. Must have at least one item.
     *
     * Generated from protobuf field <code>repeated .xray.core.InboundHandlerConfig inbound = 1;</code>
     */
    private $inbound;
    /**
     * Outbound handler configurations. Must have at least one item. The first
     * item is used as default for routing.
     *
     * Generated from protobuf field <code>repeated .xray.core.OutboundHandlerConfig outbound = 2;</code>
     */
    private $outbound;
    /**
     * App is for configurations of all features in Xray. A feature must
     * implement the Feature interface, and its config type must be registered
     * through common.RegisterConfig.
     *
     * Generated from protobuf field <code>repeated .xray.common.serial.TypedMessage app = 4;</code>
     */
    private $app;
    /**
     * Configuration for extensions. The config may not work if corresponding
     * extension is not loaded into Xray. Xray will ignore such config during
     * initialization.
     *
     * Generated from protobuf field <code>repeated .xray.common.serial.TypedMessage extension = 6;</code>
     */
    private $extension;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     * @type array<InboundHandlerConfig>|RepeatedField $inbound
     *           Inbound handler configurations. Must have at least one item.
     * @type array<OutboundHandlerConfig>|RepeatedField $outbound
     *           Outbound handler configurations. Must have at least one item. The first
     *           item is used as default for routing.
     * @type array<TypedMessage>|RepeatedField $app
     *           App is for configurations of all features in Xray. A feature must
     *           implement the Feature interface, and its config type must be registered
     *           through common.RegisterConfig.
     * @type array<TypedMessage>|RepeatedField $extension
     *           Configuration for extensions. The config may not work if corresponding
     *           extension is not loaded into Xray. Xray will ignore such config during
     *           initialization.
     * }
     */
    public function __construct($data = NULL)
    {
        \GPBMetadata\Core\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Inbound handler configurations. Must have at least one item.
     *
     * Generated from protobuf field <code>repeated .xray.core.InboundHandlerConfig inbound = 1;</code>
     * @return RepeatedField
     */
    public function getInbound()
    {
        return $this->inbound;
    }

    /**
     * Inbound handler configurations. Must have at least one item.
     *
     * Generated from protobuf field <code>repeated .xray.core.InboundHandlerConfig inbound = 1;</code>
     * @param array<InboundHandlerConfig>|RepeatedField $var
     * @return $this
     */
    public function setInbound($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, InboundHandlerConfig::class);
        $this->inbound = $arr;

        return $this;
    }

    /**
     * Outbound handler configurations. Must have at least one item. The first
     * item is used as default for routing.
     *
     * Generated from protobuf field <code>repeated .xray.core.OutboundHandlerConfig outbound = 2;</code>
     * @return RepeatedField
     */
    public function getOutbound()
    {
        return $this->outbound;
    }

    /**
     * Outbound handler configurations. Must have at least one item. The first
     * item is used as default for routing.
     *
     * Generated from protobuf field <code>repeated .xray.core.OutboundHandlerConfig outbound = 2;</code>
     * @param array<OutboundHandlerConfig>|RepeatedField $var
     * @return $this
     */
    public function setOutbound($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, OutboundHandlerConfig::class);
        $this->outbound = $arr;

        return $this;
    }

    /**
     * App is for configurations of all features in Xray. A feature must
     * implement the Feature interface, and its config type must be registered
     * through common.RegisterConfig.
     *
     * Generated from protobuf field <code>repeated .xray.common.serial.TypedMessage app = 4;</code>
     * @return RepeatedField
     */
    public function getApp()
    {
        return $this->app;
    }

    /**
     * App is for configurations of all features in Xray. A feature must
     * implement the Feature interface, and its config type must be registered
     * through common.RegisterConfig.
     *
     * Generated from protobuf field <code>repeated .xray.common.serial.TypedMessage app = 4;</code>
     * @param array<TypedMessage>|RepeatedField $var
     * @return $this
     */
    public function setApp($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, TypedMessage::class);
        $this->app = $arr;

        return $this;
    }

    /**
     * Configuration for extensions. The config may not work if corresponding
     * extension is not loaded into Xray. Xray will ignore such config during
     * initialization.
     *
     * Generated from protobuf field <code>repeated .xray.common.serial.TypedMessage extension = 6;</code>
     * @return RepeatedField
     */
    public function getExtension()
    {
        return $this->extension;
    }

    /**
     * Configuration for extensions. The config may not work if corresponding
     * extension is not loaded into Xray. Xray will ignore such config during
     * initialization.
     *
     * Generated from protobuf field <code>repeated .xray.common.serial.TypedMessage extension = 6;</code>
     * @param array<TypedMessage>|RepeatedField $var
     * @return $this
     */
    public function setExtension($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, TypedMessage::class);
        $this->extension = $arr;

        return $this;
    }

}

