<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core/config.proto

namespace Xray\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * InboundHandlerConfig is the configuration for inbound handler.
 *
 * Generated from protobuf message <code>xray.core.InboundHandlerConfig</code>
 */
class InboundHandlerConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Tag of the inbound handler. The tag must be unique among all inbound
     * handlers
     *
     * Generated from protobuf field <code>string tag = 1;</code>
     */
    protected $tag = '';
    /**
     * Settings for how this inbound proxy is handled.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage receiver_settings = 2;</code>
     */
    protected $receiver_settings = null;
    /**
     * Settings for inbound proxy. Must be one of the inbound proxies.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage proxy_settings = 3;</code>
     */
    protected $proxy_settings = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $tag
     *           Tag of the inbound handler. The tag must be unique among all inbound
     *           handlers
     *     @type \Xray\Common\Serial\TypedMessage $receiver_settings
     *           Settings for how this inbound proxy is handled.
     *     @type \Xray\Common\Serial\TypedMessage $proxy_settings
     *           Settings for inbound proxy. Must be one of the inbound proxies.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Core\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Tag of the inbound handler. The tag must be unique among all inbound
     * handlers
     *
     * Generated from protobuf field <code>string tag = 1;</code>
     * @return string
     */
    public function getTag()
    {
        return $this->tag;
    }

    /**
     * Tag of the inbound handler. The tag must be unique among all inbound
     * handlers
     *
     * Generated from protobuf field <code>string tag = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTag($var)
    {
        GPBUtil::checkString($var, True);
        $this->tag = $var;

        return $this;
    }

    /**
     * Settings for how this inbound proxy is handled.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage receiver_settings = 2;</code>
     * @return \Xray\Common\Serial\TypedMessage|null
     */
    public function getReceiverSettings()
    {
        return $this->receiver_settings;
    }

    public function hasReceiverSettings()
    {
        return isset($this->receiver_settings);
    }

    public function clearReceiverSettings()
    {
        unset($this->receiver_settings);
    }

    /**
     * Settings for how this inbound proxy is handled.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage receiver_settings = 2;</code>
     * @param \Xray\Common\Serial\TypedMessage $var
     * @return $this
     */
    public function setReceiverSettings($var)
    {
        GPBUtil::checkMessage($var, \Xray\Common\Serial\TypedMessage::class);
        $this->receiver_settings = $var;

        return $this;
    }

    /**
     * Settings for inbound proxy. Must be one of the inbound proxies.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage proxy_settings = 3;</code>
     * @return \Xray\Common\Serial\TypedMessage|null
     */
    public function getProxySettings()
    {
        return $this->proxy_settings;
    }

    public function hasProxySettings()
    {
        return isset($this->proxy_settings);
    }

    public function clearProxySettings()
    {
        unset($this->proxy_settings);
    }

    /**
     * Settings for inbound proxy. Must be one of the inbound proxies.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage proxy_settings = 3;</code>
     * @param \Xray\Common\Serial\TypedMessage $var
     * @return $this
     */
    public function setProxySettings($var)
    {
        GPBUtil::checkMessage($var, \Xray\Common\Serial\TypedMessage::class);
        $this->proxy_settings = $var;

        return $this;
    }

}

