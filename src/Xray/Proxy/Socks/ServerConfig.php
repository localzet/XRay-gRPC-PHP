<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proxy/socks/config.proto

namespace Xray\Proxy\Socks;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\MapField;
use Google\Protobuf\Internal\Message;
use GPBMetadata\Proxy\Socks\Config;
use Xray\Common\Net\IPOrDomain;

/**
 * ServerConfig is the protobuf config for Socks server.
 *
 * Generated from protobuf message <code>xray.proxy.socks.ServerConfig</code>
 */
class ServerConfig extends Message
{
    /**
     * Generated from protobuf field <code>.xray.proxy.socks.AuthType auth_type = 1;</code>
     */
    protected $auth_type = 0;
    /**
     * Generated from protobuf field <code>map<string, string> accounts = 2;</code>
     */
    private $accounts;
    /**
     * Generated from protobuf field <code>.xray.common.net.IPOrDomain address = 3;</code>
     */
    protected $address = null;
    /**
     * Generated from protobuf field <code>bool udp_enabled = 4;</code>
     */
    protected $udp_enabled = false;
    /**
     * Generated from protobuf field <code>uint32 user_level = 6;</code>
     */
    protected $user_level = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     * @type int $auth_type
     * @type array|MapField $accounts
     * @type IPOrDomain $address
     * @type bool $udp_enabled
     * @type int $user_level
     * }
     */
    public function __construct($data = NULL)
    {
        Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.xray.proxy.socks.AuthType auth_type = 1;</code>
     * @return int
     */
    public function getAuthType()
    {
        return $this->auth_type;
    }

    /**
     * Generated from protobuf field <code>.xray.proxy.socks.AuthType auth_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setAuthType($var)
    {
        GPBUtil::checkEnum($var, AuthType::class);
        $this->auth_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, string> accounts = 2;</code>
     * @return MapField
     */
    public function getAccounts()
    {
        return $this->accounts;
    }

    /**
     * Generated from protobuf field <code>map<string, string> accounts = 2;</code>
     * @param array|MapField $var
     * @return $this
     */
    public function setAccounts($var)
    {
        $arr = GPBUtil::checkMapField($var, GPBType::STRING, GPBType::STRING);
        $this->accounts = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.xray.common.net.IPOrDomain address = 3;</code>
     * @return IPOrDomain|null
     */
    public function getAddress()
    {
        return $this->address;
    }

    public function hasAddress()
    {
        return isset($this->address);
    }

    public function clearAddress()
    {
        unset($this->address);
    }

    /**
     * Generated from protobuf field <code>.xray.common.net.IPOrDomain address = 3;</code>
     * @param IPOrDomain $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkMessage($var, IPOrDomain::class);
        $this->address = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool udp_enabled = 4;</code>
     * @return bool
     */
    public function getUdpEnabled()
    {
        return $this->udp_enabled;
    }

    /**
     * Generated from protobuf field <code>bool udp_enabled = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setUdpEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->udp_enabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 user_level = 6;</code>
     * @return int
     */
    public function getUserLevel()
    {
        return $this->user_level;
    }

    /**
     * Generated from protobuf field <code>uint32 user_level = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setUserLevel($var)
    {
        GPBUtil::checkUint32($var);
        $this->user_level = $var;

        return $this;
    }

}

