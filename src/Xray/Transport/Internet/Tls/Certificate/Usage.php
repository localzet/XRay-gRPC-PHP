<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transport/internet/tls/config.proto

namespace Xray\Transport\Internet\Tls\Certificate;

use UnexpectedValueException;
use Xray\Transport\Internet\Tls\Certificate_Usage;

/**
 * Protobuf type <code>xray.transport.internet.tls.Certificate.Usage</code>
 */
class Usage
{
    /**
     * Generated from protobuf enum <code>ENCIPHERMENT = 0;</code>
     */
    const ENCIPHERMENT = 0;
    /**
     * Generated from protobuf enum <code>AUTHORITY_VERIFY = 1;</code>
     */
    const AUTHORITY_VERIFY = 1;
    /**
     * Generated from protobuf enum <code>AUTHORITY_ISSUE = 2;</code>
     */
    const AUTHORITY_ISSUE = 2;

    private static $valueToName = [
        self::ENCIPHERMENT => 'ENCIPHERMENT',
        self::AUTHORITY_VERIFY => 'AUTHORITY_VERIFY',
        self::AUTHORITY_ISSUE => 'AUTHORITY_ISSUE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Usage::class, Certificate_Usage::class);

