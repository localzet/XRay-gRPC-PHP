<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transport/internet/tls/config.proto

namespace Xray\Transport\Internet\Tls;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>xray.transport.internet.tls.Certificate</code>
 */
class Certificate extends \Google\Protobuf\Internal\Message
{
    /**
     * TLS certificate in x509 format.
     *
     * Generated from protobuf field <code>bytes certificate = 1;</code>
     */
    protected $certificate = '';
    /**
     * TLS key in x509 format.
     *
     * Generated from protobuf field <code>bytes key = 2;</code>
     */
    protected $key = '';
    /**
     * Generated from protobuf field <code>.xray.transport.internet.tls.Certificate.Usage usage = 3;</code>
     */
    protected $usage = 0;
    /**
     * Generated from protobuf field <code>uint64 ocsp_stapling = 4;</code>
     */
    protected $ocsp_stapling = 0;
    /**
     * TLS certificate path
     *
     * Generated from protobuf field <code>string certificate_path = 5;</code>
     */
    protected $certificate_path = '';
    /**
     * TLS Key path
     *
     * Generated from protobuf field <code>string key_path = 6;</code>
     */
    protected $key_path = '';
    /**
     * If true, one-Time Loading
     *
     * Generated from protobuf field <code>bool One_time_loading = 7;</code>
     */
    protected $One_time_loading = false;
    /**
     * Generated from protobuf field <code>bool build_chain = 8;</code>
     */
    protected $build_chain = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $certificate
     *           TLS certificate in x509 format.
     *     @type string $key
     *           TLS key in x509 format.
     *     @type int $usage
     *     @type int|string $ocsp_stapling
     *     @type string $certificate_path
     *           TLS certificate path
     *     @type string $key_path
     *           TLS Key path
     *     @type bool $One_time_loading
     *           If true, one-Time Loading
     *     @type bool $build_chain
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Transport\Internet\Tls\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * TLS certificate in x509 format.
     *
     * Generated from protobuf field <code>bytes certificate = 1;</code>
     * @return string
     */
    public function getCertificate()
    {
        return $this->certificate;
    }

    /**
     * TLS certificate in x509 format.
     *
     * Generated from protobuf field <code>bytes certificate = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCertificate($var)
    {
        GPBUtil::checkString($var, False);
        $this->certificate = $var;

        return $this;
    }

    /**
     * TLS key in x509 format.
     *
     * Generated from protobuf field <code>bytes key = 2;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * TLS key in x509 format.
     *
     * Generated from protobuf field <code>bytes key = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.xray.transport.internet.tls.Certificate.Usage usage = 3;</code>
     * @return int
     */
    public function getUsage()
    {
        return $this->usage;
    }

    /**
     * Generated from protobuf field <code>.xray.transport.internet.tls.Certificate.Usage usage = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setUsage($var)
    {
        GPBUtil::checkEnum($var, \Xray\Transport\Internet\Tls\Certificate\Usage::class);
        $this->usage = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 ocsp_stapling = 4;</code>
     * @return int|string
     */
    public function getOcspStapling()
    {
        return $this->ocsp_stapling;
    }

    /**
     * Generated from protobuf field <code>uint64 ocsp_stapling = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setOcspStapling($var)
    {
        GPBUtil::checkUint64($var);
        $this->ocsp_stapling = $var;

        return $this;
    }

    /**
     * TLS certificate path
     *
     * Generated from protobuf field <code>string certificate_path = 5;</code>
     * @return string
     */
    public function getCertificatePath()
    {
        return $this->certificate_path;
    }

    /**
     * TLS certificate path
     *
     * Generated from protobuf field <code>string certificate_path = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setCertificatePath($var)
    {
        GPBUtil::checkString($var, True);
        $this->certificate_path = $var;

        return $this;
    }

    /**
     * TLS Key path
     *
     * Generated from protobuf field <code>string key_path = 6;</code>
     * @return string
     */
    public function getKeyPath()
    {
        return $this->key_path;
    }

    /**
     * TLS Key path
     *
     * Generated from protobuf field <code>string key_path = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setKeyPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->key_path = $var;

        return $this;
    }

    /**
     * If true, one-Time Loading
     *
     * Generated from protobuf field <code>bool One_time_loading = 7;</code>
     * @return bool
     */
    public function getOneTimeLoading()
    {
        return $this->One_time_loading;
    }

    /**
     * If true, one-Time Loading
     *
     * Generated from protobuf field <code>bool One_time_loading = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setOneTimeLoading($var)
    {
        GPBUtil::checkBool($var);
        $this->One_time_loading = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool build_chain = 8;</code>
     * @return bool
     */
    public function getBuildChain()
    {
        return $this->build_chain;
    }

    /**
     * Generated from protobuf field <code>bool build_chain = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setBuildChain($var)
    {
        GPBUtil::checkBool($var);
        $this->build_chain = $var;

        return $this;
    }

}

