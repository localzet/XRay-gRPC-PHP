<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transport/internet/config.proto

namespace Xray\Transport\Internet;

use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;
use GPBMetadata\Transport\Internet\Config;
use Xray\Common\Serial\TypedMessage;

/**
 * Generated from protobuf message <code>xray.transport.internet.TransportConfig</code>
 */
class TransportConfig extends Message
{
    /**
     * Type of network that this settings supports.
     *
     * Generated from protobuf field <code>string protocol_name = 3;</code>
     */
    protected $protocol_name = '';
    /**
     * Specific settings. Must be of the transports.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage settings = 2;</code>
     */
    protected $settings = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     * @type string $protocol_name
     *           Type of network that this settings supports.
     * @type TypedMessage $settings
     *           Specific settings. Must be of the transports.
     * }
     */
    public function __construct($data = NULL)
    {
        Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Type of network that this settings supports.
     *
     * Generated from protobuf field <code>string protocol_name = 3;</code>
     * @return string
     */
    public function getProtocolName()
    {
        return $this->protocol_name;
    }

    /**
     * Type of network that this settings supports.
     *
     * Generated from protobuf field <code>string protocol_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setProtocolName($var)
    {
        GPBUtil::checkString($var, True);
        $this->protocol_name = $var;

        return $this;
    }

    /**
     * Specific settings. Must be of the transports.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage settings = 2;</code>
     * @return TypedMessage|null
     */
    public function getSettings()
    {
        return $this->settings;
    }

    public function hasSettings()
    {
        return isset($this->settings);
    }

    public function clearSettings()
    {
        unset($this->settings);
    }

    /**
     * Specific settings. Must be of the transports.
     *
     * Generated from protobuf field <code>.xray.common.serial.TypedMessage settings = 2;</code>
     * @param TypedMessage $var
     * @return $this
     */
    public function setSettings($var)
    {
        GPBUtil::checkMessage($var, TypedMessage::class);
        $this->settings = $var;

        return $this;
    }

}

