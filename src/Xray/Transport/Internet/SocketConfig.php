<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transport/internet/config.proto

namespace Xray\Transport\Internet;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;
use Google\Protobuf\Internal\RepeatedField;
use GPBMetadata\Transport\Internet\Config;
use Xray\Transport\Internet\SocketConfig\TProxyMode;

/**
 * SocketConfig is options to be applied on network sockets.
 *
 * Generated from protobuf message <code>xray.transport.internet.SocketConfig</code>
 */
class SocketConfig extends Message
{
    /**
     * Mark of the connection. If non-zero, the value will be set to SO_MARK.
     *
     * Generated from protobuf field <code>int32 mark = 1;</code>
     */
    protected $mark = 0;
    /**
     * TFO is the state of TFO settings.
     *
     * Generated from protobuf field <code>int32 tfo = 2;</code>
     */
    protected $tfo = 0;
    /**
     * TProxy is for enabling TProxy socket option.
     *
     * Generated from protobuf field <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
     */
    protected $tproxy = 0;
    /**
     * ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
     * option. This option is for UDP only.
     *
     * Generated from protobuf field <code>bool receive_original_dest_address = 4;</code>
     */
    protected $receive_original_dest_address = false;
    /**
     * Generated from protobuf field <code>bytes bind_address = 5;</code>
     */
    protected $bind_address = '';
    /**
     * Generated from protobuf field <code>uint32 bind_port = 6;</code>
     */
    protected $bind_port = 0;
    /**
     * Generated from protobuf field <code>bool accept_proxy_protocol = 7;</code>
     */
    protected $accept_proxy_protocol = false;
    /**
     * Generated from protobuf field <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
     */
    protected $domain_strategy = 0;
    /**
     * Generated from protobuf field <code>string dialer_proxy = 9;</code>
     */
    protected $dialer_proxy = '';
    /**
     * Generated from protobuf field <code>int32 tcp_keep_alive_interval = 10;</code>
     */
    protected $tcp_keep_alive_interval = 0;
    /**
     * Generated from protobuf field <code>int32 tcp_keep_alive_idle = 11;</code>
     */
    protected $tcp_keep_alive_idle = 0;
    /**
     * Generated from protobuf field <code>string tcp_congestion = 12;</code>
     */
    protected $tcp_congestion = '';
    /**
     * Generated from protobuf field <code>string interface = 13;</code>
     */
    protected $interface = '';
    /**
     * Generated from protobuf field <code>bool v6only = 14;</code>
     */
    protected $v6only = false;
    /**
     * Generated from protobuf field <code>int32 tcp_window_clamp = 15;</code>
     */
    protected $tcp_window_clamp = 0;
    /**
     * Generated from protobuf field <code>int32 tcp_user_timeout = 16;</code>
     */
    protected $tcp_user_timeout = 0;
    /**
     * Generated from protobuf field <code>int32 tcp_max_seg = 17;</code>
     */
    protected $tcp_max_seg = 0;
    /**
     * Generated from protobuf field <code>bool tcp_no_delay = 18;</code>
     */
    protected $tcp_no_delay = false;
    /**
     * Generated from protobuf field <code>bool tcp_mptcp = 19;</code>
     */
    protected $tcp_mptcp = false;
    /**
     * Generated from protobuf field <code>repeated .xray.transport.internet.CustomSockopt customSockopt = 20;</code>
     */
    private $customSockopt;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     * @type int $mark
     *           Mark of the connection. If non-zero, the value will be set to SO_MARK.
     * @type int $tfo
     *           TFO is the state of TFO settings.
     * @type int $tproxy
     *           TProxy is for enabling TProxy socket option.
     * @type bool $receive_original_dest_address
     *           ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
     *           option. This option is for UDP only.
     * @type string $bind_address
     * @type int $bind_port
     * @type bool $accept_proxy_protocol
     * @type int $domain_strategy
     * @type string $dialer_proxy
     * @type int $tcp_keep_alive_interval
     * @type int $tcp_keep_alive_idle
     * @type string $tcp_congestion
     * @type string $interface
     * @type bool $v6only
     * @type int $tcp_window_clamp
     * @type int $tcp_user_timeout
     * @type int $tcp_max_seg
     * @type bool $tcp_no_delay
     * @type bool $tcp_mptcp
     * @type array<CustomSockopt>|RepeatedField $customSockopt
     * }
     */
    public function __construct($data = NULL)
    {
        Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Mark of the connection. If non-zero, the value will be set to SO_MARK.
     *
     * Generated from protobuf field <code>int32 mark = 1;</code>
     * @return int
     */
    public function getMark()
    {
        return $this->mark;
    }

    /**
     * Mark of the connection. If non-zero, the value will be set to SO_MARK.
     *
     * Generated from protobuf field <code>int32 mark = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMark($var)
    {
        GPBUtil::checkInt32($var);
        $this->mark = $var;

        return $this;
    }

    /**
     * TFO is the state of TFO settings.
     *
     * Generated from protobuf field <code>int32 tfo = 2;</code>
     * @return int
     */
    public function getTfo()
    {
        return $this->tfo;
    }

    /**
     * TFO is the state of TFO settings.
     *
     * Generated from protobuf field <code>int32 tfo = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTfo($var)
    {
        GPBUtil::checkInt32($var);
        $this->tfo = $var;

        return $this;
    }

    /**
     * TProxy is for enabling TProxy socket option.
     *
     * Generated from protobuf field <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
     * @return int
     */
    public function getTproxy()
    {
        return $this->tproxy;
    }

    /**
     * TProxy is for enabling TProxy socket option.
     *
     * Generated from protobuf field <code>.xray.transport.internet.SocketConfig.TProxyMode tproxy = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setTproxy($var)
    {
        GPBUtil::checkEnum($var, TProxyMode::class);
        $this->tproxy = $var;

        return $this;
    }

    /**
     * ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
     * option. This option is for UDP only.
     *
     * Generated from protobuf field <code>bool receive_original_dest_address = 4;</code>
     * @return bool
     */
    public function getReceiveOriginalDestAddress()
    {
        return $this->receive_original_dest_address;
    }

    /**
     * ReceiveOriginalDestAddress is for enabling IP_RECVORIGDSTADDR socket
     * option. This option is for UDP only.
     *
     * Generated from protobuf field <code>bool receive_original_dest_address = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setReceiveOriginalDestAddress($var)
    {
        GPBUtil::checkBool($var);
        $this->receive_original_dest_address = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes bind_address = 5;</code>
     * @return string
     */
    public function getBindAddress()
    {
        return $this->bind_address;
    }

    /**
     * Generated from protobuf field <code>bytes bind_address = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setBindAddress($var)
    {
        GPBUtil::checkString($var, False);
        $this->bind_address = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 bind_port = 6;</code>
     * @return int
     */
    public function getBindPort()
    {
        return $this->bind_port;
    }

    /**
     * Generated from protobuf field <code>uint32 bind_port = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setBindPort($var)
    {
        GPBUtil::checkUint32($var);
        $this->bind_port = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool accept_proxy_protocol = 7;</code>
     * @return bool
     */
    public function getAcceptProxyProtocol()
    {
        return $this->accept_proxy_protocol;
    }

    /**
     * Generated from protobuf field <code>bool accept_proxy_protocol = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setAcceptProxyProtocol($var)
    {
        GPBUtil::checkBool($var);
        $this->accept_proxy_protocol = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
     * @return int
     */
    public function getDomainStrategy()
    {
        return $this->domain_strategy;
    }

    /**
     * Generated from protobuf field <code>.xray.transport.internet.DomainStrategy domain_strategy = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setDomainStrategy($var)
    {
        GPBUtil::checkEnum($var, DomainStrategy::class);
        $this->domain_strategy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string dialer_proxy = 9;</code>
     * @return string
     */
    public function getDialerProxy()
    {
        return $this->dialer_proxy;
    }

    /**
     * Generated from protobuf field <code>string dialer_proxy = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setDialerProxy($var)
    {
        GPBUtil::checkString($var, True);
        $this->dialer_proxy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_keep_alive_interval = 10;</code>
     * @return int
     */
    public function getTcpKeepAliveInterval()
    {
        return $this->tcp_keep_alive_interval;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_keep_alive_interval = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setTcpKeepAliveInterval($var)
    {
        GPBUtil::checkInt32($var);
        $this->tcp_keep_alive_interval = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_keep_alive_idle = 11;</code>
     * @return int
     */
    public function getTcpKeepAliveIdle()
    {
        return $this->tcp_keep_alive_idle;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_keep_alive_idle = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setTcpKeepAliveIdle($var)
    {
        GPBUtil::checkInt32($var);
        $this->tcp_keep_alive_idle = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string tcp_congestion = 12;</code>
     * @return string
     */
    public function getTcpCongestion()
    {
        return $this->tcp_congestion;
    }

    /**
     * Generated from protobuf field <code>string tcp_congestion = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setTcpCongestion($var)
    {
        GPBUtil::checkString($var, True);
        $this->tcp_congestion = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string interface = 13;</code>
     * @return string
     */
    public function getInterface()
    {
        return $this->interface;
    }

    /**
     * Generated from protobuf field <code>string interface = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setInterface($var)
    {
        GPBUtil::checkString($var, True);
        $this->interface = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool v6only = 14;</code>
     * @return bool
     */
    public function getV6Only()
    {
        return $this->v6only;
    }

    /**
     * Generated from protobuf field <code>bool v6only = 14;</code>
     * @param bool $var
     * @return $this
     */
    public function setV6Only($var)
    {
        GPBUtil::checkBool($var);
        $this->v6only = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_window_clamp = 15;</code>
     * @return int
     */
    public function getTcpWindowClamp()
    {
        return $this->tcp_window_clamp;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_window_clamp = 15;</code>
     * @param int $var
     * @return $this
     */
    public function setTcpWindowClamp($var)
    {
        GPBUtil::checkInt32($var);
        $this->tcp_window_clamp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_user_timeout = 16;</code>
     * @return int
     */
    public function getTcpUserTimeout()
    {
        return $this->tcp_user_timeout;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_user_timeout = 16;</code>
     * @param int $var
     * @return $this
     */
    public function setTcpUserTimeout($var)
    {
        GPBUtil::checkInt32($var);
        $this->tcp_user_timeout = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_max_seg = 17;</code>
     * @return int
     */
    public function getTcpMaxSeg()
    {
        return $this->tcp_max_seg;
    }

    /**
     * Generated from protobuf field <code>int32 tcp_max_seg = 17;</code>
     * @param int $var
     * @return $this
     */
    public function setTcpMaxSeg($var)
    {
        GPBUtil::checkInt32($var);
        $this->tcp_max_seg = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool tcp_no_delay = 18;</code>
     * @return bool
     */
    public function getTcpNoDelay()
    {
        return $this->tcp_no_delay;
    }

    /**
     * Generated from protobuf field <code>bool tcp_no_delay = 18;</code>
     * @param bool $var
     * @return $this
     */
    public function setTcpNoDelay($var)
    {
        GPBUtil::checkBool($var);
        $this->tcp_no_delay = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool tcp_mptcp = 19;</code>
     * @return bool
     */
    public function getTcpMptcp()
    {
        return $this->tcp_mptcp;
    }

    /**
     * Generated from protobuf field <code>bool tcp_mptcp = 19;</code>
     * @param bool $var
     * @return $this
     */
    public function setTcpMptcp($var)
    {
        GPBUtil::checkBool($var);
        $this->tcp_mptcp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .xray.transport.internet.CustomSockopt customSockopt = 20;</code>
     * @return RepeatedField
     */
    public function getCustomSockopt()
    {
        return $this->customSockopt;
    }

    /**
     * Generated from protobuf field <code>repeated .xray.transport.internet.CustomSockopt customSockopt = 20;</code>
     * @param array<CustomSockopt>|RepeatedField $var
     * @return $this
     */
    public function setCustomSockopt($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, CustomSockopt::class);
        $this->customSockopt = $arr;

        return $this;
    }

}

